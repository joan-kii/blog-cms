{"version":3,"sources":["context/Context.js","components/Topbar.js","components/LoginForm.js","components/CreateAdminForm.js","components/FormModal.js","hooks/useFetchPostList.js","modules/publishPost.js","modules/convertToDraft.js","modules/deletePost.js","components/PostList.js","hooks/useFetchDraftList.js","modules/getSingleDraft.js","modules/deleteDraft.js","modules/publishDraft.js","components/DraftList.js","modules/saveDraft.js","modules/updateDraft.js","components/CreateDraft.js","modules/deleteComment.js","components/ManageComments.js","App.js","index.js"],"names":["require","config","Context","createContext","ContextProvider","props","useState","showModal","setShowModal","newAdmin","setNewAdmin","currentUser","setCurrentUser","showLogin","setShowLogin","error","setError","createAdmin","a","process","options","method","mode","body","JSON","stringify","headers","fetch","response","json","then","result","status","message","msg","localStorage","setItem","token","user","getItem","loginAdmin","admin","useEffect","value","Provider","children","Topbar","useContext","Navbar","sticky","bg","variant","Container","className","to","Brand","Nav","Collapse","Text","Button","onClick","removeItem","LoginForm","adminNameRef","useRef","adminPasswordRef","Form","onSubmit","e","adminName","password","preventDefault","current","handleSubmit","Group","controlId","Label","Control","type","placeholder","ref","CreateAdminForm","passwordRef","confirmPasswordRef","passcodeRef","confPass","passcode","confirmPassword","inputype","required","FormModal","toggleForm","handleClose","useCallback","Modal","show","onHide","backdrop","centered","Header","Title","Body","Footer","Alert","useFetchPostsList","URL","postList","setPostList","loading","setLoading","data","fetchPosts","publishPost","slug","ok","convertToDraft","deletePost","PostList","htmlDoc","navigate","useNavigate","parser","DOMParser","popoverConvert","Popover","id","as","popoverDelete","handlePublish","window","location","reload","handleDelete","editPost","Spinner","animation","map","post","index","parseFromString","description","Card","published","Badge","title","getElementsByTagName","textContent","comments","length","OverlayTrigger","placement","overlay","state","useFetchDraftList","draftList","setDraftList","fetchDrafts","getSingleDraft","deleteDraft","publishDraft","DraftList","popoverEdit","handleEdit","draft","saveDraft","updateDraft","updatedDraft","CreateDraft","titleRef","descriptionRef","textRef","notesRef","setTitle","setDescription","text","setText","notes","setNotes","useLocation","editTitle","editDescription","editText","editNotes","handleSave","handleUpdate","onInit","evt","editor","initialValue","apiKey","init","height","menubar","plugins","toolbar","onChange","getContent","format","size","deleteComment","ManageComments","delComment","comment","App","path","element","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.64f29c3c.chunk.js","sourcesContent":["import React, { createContext, useState, useEffect} from 'react';\n\nrequire('dotenv').config();\n\nexport const Context = createContext();\n\nconst ContextProvider = (props) => {\n  \n  // Context Utilities\n  const [showModal, setShowModal] = useState(true);\n  const [newAdmin, setNewAdmin] = useState(false);\n  const [currentUser, setCurrentUser] = useState(null);\n  const [showLogin, setShowLogin] = useState(true);\n  const [error, setError] = useState('');\n\n  // Create New Admin\n  const createAdmin = async (newAdmin) => {\n\n    const URL = process.env.REACT_APP_API_URL + 'admin/create';\n    const options = {\n      method: 'POST',\n      mode: 'cors',\n      body: JSON.stringify(newAdmin),\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    };\n    try {\n      const response = await fetch(URL, options);\n      // eslint-disable-next-line\n      const data = response.json().then(result => {\n        if (response.status !== 200) {\n          setError(result.message[0].msg);\n        } else {\n          localStorage.setItem('token', result.token);\n          localStorage.setItem('user', result.user);\n          setCurrentUser(localStorage.getItem('user'));\n          setError('');\n        }\n      });\n    } catch (err) {\n      setError(err.message);\n    }\n  };\n\n  // Login Admin\n  const loginAdmin = async (admin) => {\n\n    const URL = process.env.REACT_APP_API_URL + 'admin/login';\n    const options = {\n      method: 'POST',\n      mode: 'cors',\n      body: JSON.stringify(admin),\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    };\n    try {\n      const response = await fetch(URL, options);\n      // eslint-disable-next-line\n      const data = response.json().then(result => {\n        if (response.status !== 200) {\n          setError(result.message);\n        } else {\n          localStorage.setItem('token', result.token);\n          localStorage.setItem('user', result.user);\n          setCurrentUser(localStorage.getItem('user'));\n          setError('');\n        }\n      });\n    } catch (err) {\n      setError(err.message);\n    }\n  };\n\n  useEffect(() => {\n    setCurrentUser(localStorage.getItem('user'));\n  }, [])\n\n  const value = {\n    showModal, setShowModal, newAdmin, setNewAdmin,\n    currentUser, setCurrentUser, showLogin, \n    setShowLogin, createAdmin, loginAdmin, error\n  };\n\n  return (\n    <Context.Provider value={value}>\n      {props.children}\n    </Context.Provider>\n  );\n};\n\nexport default ContextProvider;\n","import React, { useContext } from 'react';\n\nimport Navbar from 'react-bootstrap/Navbar';\nimport Container from 'react-bootstrap/Container';\nimport Nav from 'react-bootstrap/Nav';\nimport Button from 'react-bootstrap/Button';\nimport { Link } from 'react-router-dom';\n\nimport { Context } from '../context/Context';\n\nconst Topbar = () => {\n\n  const { currentUser, setCurrentUser } = useContext(Context);\n  \n  const handleLogout = () => {\n    localStorage.removeItem('user');\n    setCurrentUser(null);\n  };\n\n  return (\n    <>\n      <Navbar \n        sticky=\"top\" \n        bg=\"dark\" \n        variant=\"dark\">\n        <Container>\n          <Link className=\"nav-link\" to=\"/\">\n            <Navbar.Brand>Blog CMS</Navbar.Brand>\n          </Link>\n          <Nav className=\"me-auto\">\n            <Link className=\"nav-link\" to=\"/\">Posts</Link>\n            <Link className=\"nav-link\" to=\"/drafts\">Drafts</Link>\n          </Nav>\n          <Navbar.Collapse className=\"justify-content-end\">\n            { currentUser && \n              <div>\n                <Navbar.Text className=\"me-3\">\n                  {currentUser}\n                </Navbar.Text>\n                <Button \n                  className=\"me-3\"\n                  variant=\"outline-light\"\n                  onClick={handleLogout}>\n                    Logout\n                </Button>\n                <Link \n                  className=\"btn btn-outline-light\"\n                  to=\"/drafts/create\">\n                    New Draft\n                </Link>\n              </div> }\n          </Navbar.Collapse>\n        </Container>\n      </Navbar>\n    </>\n  )\n};\n\nexport default Topbar;\n","import React, { useContext, useRef } from 'react';\n\nimport Form from 'react-bootstrap/Form';\nimport Button from 'react-bootstrap/Button';\n\nimport { Context } from '../context/Context';\n\nconst LoginForm = () => {\n\n  const { loginAdmin } = useContext(Context);\n  \n  const adminNameRef = useRef();\n  const adminPasswordRef = useRef();\n\n  const handleSubmit = (e, adminName, password) => {\n    e.preventDefault();\n    const admin = {\n      adminName: adminName.current.value,\n      password: password.current.value\n    };\n    loginAdmin(admin);\n  };\n\n  return (\n    <>\n      <Form onSubmit={(e) => {handleSubmit(e, adminNameRef, adminPasswordRef)}}>\n        <Form.Group className=\"mb-3\" controlId=\"adminName\">\n          <Form.Label>Admin Name</Form.Label>\n          <Form.Control \n            type=\"text\" \n            placeholder=\"Enter your Admin name\" \n            ref={adminNameRef} />\n        </Form.Group>\n\n        <Form.Group className=\"mb-3\" controlId=\"adminPassword\">\n          <Form.Label>Admin Password</Form.Label>\n          <Form.Control \n            type=\"password\" \n            placeholder=\"Enter your Admin password\"\n            ref={adminPasswordRef} />\n        </Form.Group>\n        <Button variant=\"primary\" type=\"submit\">\n          Login\n        </Button> \n      </Form>\n    </>\n  );\n};\n\nexport default LoginForm;\n","import React, { useContext, useRef } from 'react';\n\nimport Form from 'react-bootstrap/Form';\nimport Button from 'react-bootstrap/Button';\n\nimport { Context } from '../context/Context';\n\nconst CreateAdminForm = () => {\n\n  const { createAdmin } = useContext(Context);\n\n  const adminNameRef = useRef();\n  const passwordRef = useRef();\n  const confirmPasswordRef = useRef();\n  const passcodeRef = useRef();\n  const handleSubmit = (e, admin, password, confPass, passcode) => {\n    e.preventDefault();\n    const newAdmin = {\n      adminName: admin.current.value,\n      password: password.current.value,\n      confirmPassword: confPass.current.value,\n      passcode: passcode.current.value\n    };\n    createAdmin(newAdmin);\n  };\n\n  return (\n    <>\n      <Form onSubmit={(e) => {\n        handleSubmit(e, adminNameRef, passwordRef, confirmPasswordRef, passcodeRef);\n          }} >\n        <Form.Group \n          className=\"mb-3\" \n          controlId=\"adminName\" >\n          <Form.Label>Admin Name</Form.Label>\n          <Form.Control \n            inputype=\"text\" \n            placeholder=\"Enter an Admin name\" \n            ref={adminNameRef}\n            required />\n        </Form.Group>\n\n        <Form.Group className=\"mb-3\" controlId=\"adminPassword\">\n          <Form.Label>Admin Password</Form.Label>\n          <Form.Control \n            type=\"password\" \n            placeholder=\"Enter a password\"\n            ref={passwordRef} \n            required />\n        </Form.Group>\n\n        <Form.Group className=\"mb-3\" controlId=\"confirmPassword\">\n          <Form.Label>Confirm Admin Password</Form.Label>\n          <Form.Control \n            type=\"password\" \n            placeholder=\"Confirm password\"\n            ref={confirmPasswordRef} \n            required />\n        </Form.Group>\n\n        <Form.Group className=\"mb-3\" controlId=\"passcode\">\n          <Form.Label>Passcode</Form.Label>\n          <Form.Control \n            type=\"password\" \n            placeholder=\"Enter passcode\" \n            ref={passcodeRef} \n            required />\n          <Form.Text className=\"text-muted\">\n            Enter the secret password to create an admin.\n          </Form.Text>\n        </Form.Group>\n        <Button variant=\"primary\" type=\"submit\">\n          Create\n        </Button> \n      </Form>\n    </>\n  )\n};\n\nexport default CreateAdminForm;\n","import React, { useContext, useCallback } from 'react';\nimport LoginForm from './LoginForm';\nimport CreateAdminForm from './CreateAdminForm';\n\nimport Modal from 'react-bootstrap/Modal';\nimport Button from \"react-bootstrap/Button\";\nimport Alert from 'react-bootstrap/Alert';\n\nimport { Context } from '../context/Context';\n\nconst FormModal = () => {\n\n  const { \n    showModal, setShowModal,\n    currentUser, error,\n    showLogin, setShowLogin\n    } = useContext(Context);\n\n  const toggleForm = () => {\n    setShowLogin(!showLogin);\n  };\n\n  const handleClose = useCallback(() => {\n    setShowModal(false);\n  }, [setShowModal]);\n\n  return (\n    <>\n      { !currentUser &&\n        <Modal \n          show={showModal} \n          onHide={handleClose}\n          backdrop=\"static\"\n          centered>\n          <Modal.Header>\n            <Modal.Title>\n              {showLogin ? \"Login\" : \"Create New Admin\"}\n            </Modal.Title>\n          </Modal.Header>\n          <Modal.Body>\n            {showLogin ?\n              <LoginForm /> :\n              <CreateAdminForm />}\n          </Modal.Body>\n          <Modal.Footer>\n            {showLogin ?\n              <div className=\"d-flex align-items-center\">\n                <p className=\"mb-0\">Don't have an admin account?</p>\n                <Button className=\"ms-3\" variant=\"primary\" onClick={toggleForm}>\n                  Create Admin\n                </Button>\n              </div> :\n              <div className=\"d-flex align-items-center\">\n                <p className=\"mb-0\">Do you have an admin account?</p>\n                <Button className=\"ms-3\" variant=\"primary\" onClick={toggleForm}>\n                  Login\n                </Button>\n              </div>}\n          </Modal.Footer>\n          { error && <Alert className=\"mx-3\" variant=\"danger\">{error}</Alert> }\n        </Modal> }\n    </>\n  );\n};\n\nexport default FormModal;\n","import { useState, useEffect, useContext } from 'react';\n\nimport { Context } from '../context/Context';\n\nrequire('dotenv').config();\n\nconst useFetchPostsList = () => {\n\n  const { currentUser, setCurrentUser } = useContext(Context);\n\n  const URL = process.env.REACT_APP_API_URL + 'admin/posts';\n  const token = localStorage.getItem('token');\n  const options = {\n    method: 'GET',\n    mode: 'cors',\n    headers: {\n    'Content-Type': 'application/json',\n    'Authorization': `Bearer ${token}`\n    }\n  };\n  const [postList, setPostList] = useState(null);\n  const [loading, setLoading] = useState(true);\n  \n  async function fetchPosts() {\n    setLoading(true);\n    const response = await fetch(URL, options); \n    if (response.status === 401) setCurrentUser(null);\n    const data = await response.json();\n    if (data) {\n      setPostList(data);\n      setLoading(false);\n    }\n  }\n  useEffect(() => {\n    fetchPosts();\n      // eslint-disable-next-line\n  }, [currentUser])\n  \n  return [loading, postList];\n};\n\nexport default useFetchPostsList;\n","require('dotenv').config();\n\nconst publishPost = async (slug) => {\n\n  const URL = process.env.REACT_APP_API_URL + 'admin/posts/publish';\n  const token = localStorage.getItem('token');\n  const options = {\n    method: 'POST',\n    mode: 'cors',\n    body: JSON.stringify({slug}),\n    headers: {\n      'Content-Type': 'application/json',\n      'Authorization': `Bearer ${token}`\n    }\n  };\n\n  const response = await fetch(URL, options);\n  return response.ok;\n};\n  \nexport default publishPost;\n  ","require('dotenv').config();\n\nconst convertToDraft = async (slug) => {\n\n  const URL = process.env.REACT_APP_API_URL + 'admin/posts/convert';\n  const token = localStorage.getItem('token');\n  const options = {\n    method: 'POST',\n    mode: 'cors',\n    body: JSON.stringify({slug}),\n    headers: {\n      'Content-Type': 'application/json',\n      'Authorization': `Bearer ${token}`\n    }\n  };\n    \n  const response = await fetch(URL, options);\n  return response.ok;\n};\n      \nexport default convertToDraft;\n","require('dotenv').config();\n\nconst deletePost = async (slug) => {\n\n  const URL = process.env.REACT_APP_API_URL + 'admin/posts/delete';\n  const token = localStorage.getItem('token');\n  const options = {\n    method: 'DELETE',\n    mode: 'cors',\n    body: JSON.stringify({slug}),\n    headers: {\n      'Content-Type': 'application/json',\n      'Authorization': `Bearer ${token}`\n    }\n  };\n\n  const response = await fetch(URL, options);\n  return response.ok;\n};\n    \nexport default deletePost;\n","import React, { useContext } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport Card from 'react-bootstrap/Card';\nimport Button from 'react-bootstrap/Button';\nimport Spinner from 'react-bootstrap/Spinner';\nimport Popover from 'react-bootstrap/Popover';\nimport OverlayTrigger from 'react-bootstrap/OverlayTrigger';\nimport Badge from 'react-bootstrap/Badge';\n\nimport { Context } from '../context/Context';\nimport useFetchPostsList from '../hooks/useFetchPostList';\nimport publishPost from '../modules/publishPost'; \nimport convertToDraft from '../modules/convertToDraft';\nimport deletePost from '../modules/deletePost'; \n\nconst PostList = () => {\n  \n  const { currentUser } = useContext(Context);\n\n  const navigate = useNavigate();\n\n  const parser = new DOMParser();\n  let htmlDoc;\n\n  const [loading, postList]  = useFetchPostsList();\n  const popoverConvert = (\n    <Popover id=\"popover-convert\">\n      <Popover.Header as=\"h4\">Convert to Draft</Popover.Header>\n      <Popover.Body>\n        You will find this post in drafts to edit it again.\n      </Popover.Body>\n    </Popover>\n  );\n  const popoverDelete = (\n    <Popover id=\"popover-delete\">\n      <Popover.Header as=\"h4\">Delete Post</Popover.Header>\n      <Popover.Body>\n      Are you sure you want to delete this post?\n      </Popover.Body>\n    </Popover>\n  );\n\n  const handlePublish = async (slug) => {\n    const response = await publishPost(slug);\n    if (response) window.location.reload();\n  };\n\n  const manageComments = (slug, comments) => {\n    navigate('/post/comments', {state: {slug, comments}});\n  };\n\n  const handleDelete = async (slug) => {\n    const delPost = await deletePost(slug);\n    if (delPost) window.location.reload();\n  };\n\n  const editPost = async (slug) => {\n    const edPost = convertToDraft(slug);\n    if (edPost) navigate('/drafts');\n  };\n\n  return (\n    <>\n      {currentUser &&\n        <div className=\"mx-auto mt-3 d-flex flex-column align-items-center\">\n          <h1 className=\"text-center text-muted\">Post List</h1>\n          {loading && \n            <Spinner\n              className=\"mt-5\"\n              animation=\"grow\"\n              variant=\"dark\">\n                <span className=\"visually-hidden\">Loading...</span>\n            </Spinner>}\n          <div className=\"w-50\">\n            {!loading && \n              postList.map((post, index) => {\n                htmlDoc = parser.parseFromString(post.description, 'text/html');\n                return (\n                  <Card \n                    key={index}\n                    className=\"mx-auto my-3 w-75\">\n                    <Card.Header className=\"d-flex justify-content-between\" as=\"h5\">\n                      {post.published ? \n                        <Badge bg=\"success\">Published</Badge> :\n                        <Badge bg=\"danger\">Not Published</Badge>\n                      }\n                      Post {index + 1}\n                    </Card.Header>\n                    <Card.Body>\n                      <Card.Title>Title: {post.title}</Card.Title>\n                      <Card.Text>Description: {htmlDoc.getElementsByTagName('p')[0].textContent}</Card.Text>\n                      <Card.Text>Comments: {post.comments.length}</Card.Text>\n                      <div className=\"d-flex justify-content-between\">\n                        <OverlayTrigger placement=\"left\" overlay={popoverConvert}>\n                          <Button \n                            onClick={() => editPost(post.slug)} \n                            variant=\"outline-primary\">Edit Post</Button>\n                        </OverlayTrigger>\n                        {post.published ? \n                          <Button \n                            onClick={() => handlePublish(post.slug)} \n                            variant=\"outline-primary\">Unpublish Post</Button> :\n                          <Button \n                            onClick={() => handlePublish(post.slug)} \n                            variant=\"outline-primary\">Publish Post</Button>\n                        }\n                        {(post.comments.length > 0) &&\n                          <Button \n                            onClick={() => manageComments(post.slug, post.comments)} \n                            variant=\"outline-primary\">Manage Comments</Button>\n                        }\n                        <OverlayTrigger placement=\"right\" overlay={popoverDelete}>\n                          <Button onClick={() => handleDelete(post.slug)} variant=\"outline-danger\">Delete Post</Button>\n                        </OverlayTrigger>\n                      </div>\n                    </Card.Body>\n                  </Card>\n                )\n              })}\n            </div>\n        </div>\n        }\n    </>\n  )\n};\n\nexport default PostList;\n","import { useState, useEffect, useContext } from 'react';\n\nimport { Context } from '../context/Context';\n\nrequire('dotenv').config();\n\nconst useFetchDraftList = () => {\n\n  const { setCurrentUser } = useContext(Context);\n\n  const URL = process.env.REACT_APP_API_URL + 'admin/drafts';\n  const token = localStorage.getItem('token');\n  const options = {\n    method: 'GET',\n    mode: 'cors',\n    headers: {\n    'Content-Type': 'application/json',\n    'Authorization': `Bearer ${token}`\n    }\n  };\n  const [draftList, setDraftList] = useState(null);\n  const [loading, setLoading] = useState(true);\n  \n  async function fetchDrafts() {\n    setLoading(true);\n    const response = await fetch(URL, options); \n    const data = await response.json();\n    if (response.status === 401) {\n      setCurrentUser(null);\n    } else {\n      setDraftList(data);\n      setLoading(false);\n    }\n  }\n  useEffect(() => {\n    fetchDrafts();\n      // eslint-disable-next-line\n  }, [])\n  \n  return [loading, draftList];\n};\n\nexport default useFetchDraftList;\n","require('dotenv').config();\n\nconst getSingleDraft = async (slug) => {\n\n  const URL = process.env.REACT_APP_API_URL + `admin/drafts/${slug}`;\n  const token = localStorage.getItem('token');\n  const options = {\n    method: 'GET',\n    mode: 'cors',\n    headers: {\n    'Content-Type': 'application/json',\n    'Authorization': `Bearer ${token}`\n    }\n  };\n  \n  const response = await fetch(URL, options); \n  const data = await response.json();\n  if (response.status !== 200) {\n    return false;\n  } else {\n    return data;\n  }\n};\n\nexport default getSingleDraft;\n","require('dotenv').config();\n\nconst deleteDraft = async (slug) => {\n\n  const URL = process.env.REACT_APP_API_URL + 'admin/drafts/delete';\n  const token = localStorage.getItem('token');\n  const options = {\n    method: 'DELETE',\n    mode: 'cors',\n    body: JSON.stringify({slug}),\n    headers: {\n      'Content-Type': 'application/json',\n      'Authorization': `Bearer ${token}`\n    }\n  };\n  \n  const response = await fetch(URL, options);\n  return response.ok;\n};\n      \nexport default deleteDraft;\n","require('dotenv').config();\n\nconst publishDraft = async (slug) => {\n\n  const URL = process.env.REACT_APP_API_URL + 'admin/drafts/publish';\n  const token = localStorage.getItem('token');\n  const options = {\n    method: 'POST',\n    mode: 'cors',\n    body: JSON.stringify({slug}),\n    headers: {\n      'Content-Type': 'application/json',\n      'Authorization': `Bearer ${token}`\n    }\n  };\n  \n  const response = await fetch(URL, options);\n  return response.ok;\n};\n    \nexport default publishDraft;\n","import React, { useState, useContext } from 'react';\nimport { useNavigate } from \"react-router-dom\";\nimport Card from 'react-bootstrap/Card';\nimport Button from 'react-bootstrap/Button';\nimport Spinner from 'react-bootstrap/Spinner';\nimport Popover from 'react-bootstrap/Popover';\nimport OverlayTrigger from 'react-bootstrap/OverlayTrigger';\n\nimport { Context } from '../context/Context';\nimport useFetchDraftList from '../hooks/useFetchDraftList';\nimport getSingleDraft from '../modules/getSingleDraft';\nimport deleteDraft from '../modules/deleteDraft';\nimport publishDraft from '../modules/publishDraft';\nimport { Alert } from 'bootstrap';\n\nconst DraftList = () => {\n\n  const { currentUser } = useContext(Context);\n  const [error, setError] = useState('');\n  const [loading, draftList]  = useFetchDraftList();\n  const popoverEdit = (\n    <Popover id=\"popover-edit\">\n      <Popover.Header as=\"h4\">Edit Draft</Popover.Header>\n      <Popover.Body>\n        You can edit, publish or delete this draft.\n      </Popover.Body>\n    </Popover>\n  );\n  const popoverDelete = (\n    <Popover id=\"popover-delete\">\n      <Popover.Header as=\"h4\">Delete Draft</Popover.Header>\n      <Popover.Body>\n        Are you sure you want to delete this draft?\n      </Popover.Body>\n    </Popover>\n  );\n\n  const navigate = useNavigate();\n\n  const parser = new DOMParser();\n  let htmlDoc;\n\n  const handleEdit = async (slug) => {\n    const response = await getSingleDraft(slug);\n    if (response) {\n      navigate('/drafts/update', {state: {response}});\n    } else {\n      setError('Ooops... Something went wrong.')\n    }\n  }; \n\n  const handlePublish = async (slug) => {\n    const pubDraft = await publishDraft(slug);\n    if (pubDraft) navigate('/');\n  };\n\n  const handleDelete = async (slug) => {\n    const delDraft = await deleteDraft(slug);\n    if (delDraft) window.location.reload();\n  };\n\n  return (\n    <>\n      {currentUser && \n        <div className=\"mx-auto mt-3 d-flex flex-column align-items-center\">\n          <h1 className=\"text-center text-muted\">Draft List</h1>\n          {loading && \n            <Spinner\n              className=\"mt-5\"\n              animation=\"grow\"\n              variant=\"dark\">\n                <span className=\"visually-hidden\">Loading...</span>\n            </Spinner>}\n          <div className=\"w-50\">\n            {!loading && \n              draftList.map((draft, index) => {\n                htmlDoc = parser.parseFromString(draft.description, 'text/html');\n                return (\n                  <Card \n                    key={index}\n                    className=\"mx-auto my-3 w-75\">\n                    <Card.Header as=\"h5\">Draft {index + 1}</Card.Header>\n                    <Card.Body>\n                      <Card.Title>Title: {draft.title}</Card.Title>\n                      <Card.Text>Description: {htmlDoc.getElementsByTagName('p')[0].textContent}</Card.Text>\n                      <div className=\" d-flex justify-content-between\">\n                        <OverlayTrigger placement=\"left\" overlay={popoverEdit}>\n                          <Button onClick={() => handleEdit(draft.slug)} variant=\"outline-primary\">Edit Draft</Button>\n                        </OverlayTrigger>\n                        <Button onClick={() => handlePublish(draft.slug)} variant=\"outline-primary\">Publish Post</Button>\n                        <OverlayTrigger placement=\"right\" overlay={popoverDelete}>\n                          <Button onClick={() => handleDelete(draft.slug)} variant=\"outline-danger\">Delete Draft</Button>\n                        </OverlayTrigger>\n                      </div>\n                    </Card.Body>\n                  </Card>\n                )\n              })\n            }\n          </div>\n          {error && <Alert variant=\"danger\">{error}</Alert>}       \n        </div>\n      }\n    </>\n  )\n};\n\nexport default DraftList;\n","require('dotenv').config();\n\nconst saveDraft = async (draft) => {\n\n  const URL = process.env.REACT_APP_API_URL + 'admin/drafts/create';\n  const token = localStorage.getItem('token');\n  const options = {\n    method: 'POST',\n    mode: 'cors',\n    body: JSON.stringify(draft),\n    headers: {\n    'Content-Type': 'application/json',\n    'Authorization': `Bearer ${token}`\n    }\n  };\n\n  const response = await fetch(URL, options);\n  return response.ok;\n};\n\nexport default saveDraft;\n","require('dotenv').config();\n\nconst updateDraft = async (updatedDraft) => {\n\n  const URL = process.env.REACT_APP_API_URL + 'admin/drafts/update';\n  const token = localStorage.getItem('token');\n  const options = {\n    method: 'POST',\n    mode: 'cors',\n    body: JSON.stringify(updatedDraft),\n    headers: {\n      'Content-Type': 'application/json',\n      'Authorization': `Bearer ${token}`\n    }\n  };\n\n  const response = await fetch(URL, options);\n  return response.ok;\n};\n\nexport default updateDraft;\n","import React, { useState, useRef } from \"react\";\nimport { useNavigate, useLocation } from \"react-router-dom\";\nimport { Editor } from '@tinymce/tinymce-react';\nimport Button from 'react-bootstrap/Button';\nimport Alert from 'react-bootstrap/Alert';\n\nimport saveDraft from '../modules/saveDraft';\nimport updateDraft from '../modules/updateDraft';\n\nrequire('dotenv').config();\n\nconst CreateDraft = () => {\n\n  const titleRef = useRef(null);\n  const descriptionRef = useRef(null);\n  const textRef = useRef(null);\n  const notesRef = useRef(null);\n\n  const [title, setTitle] = useState();\n  const [description, setDescription] = useState();\n  const [text, setText] = useState();\n  const [notes, setNotes] = useState();\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState('');\n\n  const navigate = useNavigate();\n  const location = useLocation();\n  const editTitle = location.state?.response.title;\n  const editDescription = location.state?.response.description;\n  const editText = location.state?.response.text;\n  const editNotes = location.state?.response.notes;\n\n  const handleTitleChange = (e) => {\n    e.preventDefault();\n    setTitle(titleRef.current.getContent({format: 'text'}));\n  };\n  \n  const handleDescriptionChange = (e) => {\n    e.preventDefault();\n    setDescription(descriptionRef.current.getContent());\n  };\n\n  const handleTextChange = (e) => {\n    e.preventDefault();\n    setText(textRef.current.getContent());\n  };\n\n  const handleNotesChange = (e) => {\n    e.preventDefault();\n    setNotes(notesRef.current.getContent());\n  };\n\n  const handleSave = async () => {\n    setLoading(true);\n    const draft = {title, description, text, notes};\n    const saved = await saveDraft(draft);\n    if (saved) {\n      setError('');\n      setLoading(false);\n      navigate('/drafts');\n    } else {\n      setLoading(false);\n      setError('Ooops... Something went wrong.');\n    }\n  };\n\n  const handleUpdate = async () => {\n    setLoading(true);\n    const updatedDraft = {editTitle, title, description, text, notes};\n    const saved = await updateDraft(updatedDraft);\n    if (saved) {\n      setError('');\n      setLoading(false);\n      navigate('/drafts');\n    } else {\n      setLoading(false);\n      setError('Ooops... Something went wrong.');\n    }\n  };\n\n  return (\n    <>\n      <div \n        className=\"mx-auto mt-4 py-2 px-5 h-auto w-50 d-flex flex-column bg-secondary bg-opacity-10 rounded\">\n        <div className=\"mt-2\">\n          <h3 className=\"mb-3 text-center text-muted\">Title</h3>\n          <Editor \n            onInit={(evt, editor) => titleRef.current = editor}\n            initialValue={(editTitle && `<h2>${editTitle}</h2>`) || \"<h2>Post Title</h2>\"}\n            apiKey={process.env.REACT_APP_TINY_API_KEY}\n            init={{\n              height: 150,\n              menubar: false,\n              plugins: [\"preview wordcount paste\"],\n              toolbar: \n                // eslint-disable-next-line\n                \"undo redo | bold italic | \\\n                alignleft aligncenter alignright\"\n            }}\n            onChange={handleTitleChange} />\n        </div>\n        <div className=\"mt-2\">\n          <h3 className=\"mb-3 text-center text-muted\">Description</h3>\n          <Editor \n            onInit={(evt, editor) => descriptionRef.current = editor}\n            initialValue={editDescription || \"<p>Description</p>\"}\n            apiKey={process.env.REACT_APP_TINY_API_KEY}\n            init={{\n              height: 250,\n              menubar: false,\n              plugins: [\"preview wordcount paste\"],\n              toolbar: \n                // eslint-disable-next-line\n                \"undo redo | bold italic | \\\n                alignleft aligncenter alignright\"\n            }}\n            onChange={handleDescriptionChange} />\n        </div>\n        <div className=\"mt-2\">\n          <h3 className=\"mb-3 text-center text-muted\">Post</h3>\n          <Editor \n            onInit={(evt, editor) => textRef.current = editor}\n            initialValue={editText || \"<p>Post Text</p>\"}\n            apiKey={process.env.REACT_APP_TINY_API_KEY}\n            init={{\n              height: 400,\n              menubar: false,\n              plugins: [\"preview wordcount\"],\n              toolbar: \n                  // eslint-disable-next-line\n                \"undo redo | bold italic | \\\n                alignleft aligncenter alignright\"\n            }}\n            onChange={handleTextChange} />\n        </div>\n        <div className=\"mt-2\">\n          <h3 className=\"mb-3 text-center text-muted\">Notes</h3>\n          <Editor \n            onInit={(evt, editor) => notesRef.current = editor}\n            initialValue={editNotes || \"<p>Notes</p>\"}\n            apiKey={process.env.REACT_APP_TINY_API_KEY}\n            init={{\n              height: 150,\n              menubar: false,\n              plugins: [\"preview wordcount\"],\n              toolbar: \n                  // eslint-disable-next-line\n                \"undo redo | bold italic | \\\n                alignleft aligncenter alignright\"\n            }}\n            onChange={handleNotesChange} />\n        </div>\n        <div className=\"my-4\">\n          {location.state === null ?\n            <Button \n              variant=\"outline-primary\"\n              size=\"lg\"\n              onClick={handleSave}>\n                Save Draft\n            </Button> :\n            <Button \n              variant=\"outline-primary\"\n              size=\"lg\"\n              onClick={handleUpdate}>\n                Update Draft\n            </Button>\n          }\n        </div>\n        {error && <Alert variant=\"danger\">{error}</Alert>}\n        {loading && <Alert variant=\"info\">Saving...</Alert>}\n      </div>\n    </>\n  )\n}\n\nexport default CreateDraft;\n","require('dotenv').config();\n\nconst deleteComment = async (slug, index) => {\n\n  const URL = process.env.REACT_APP_API_URL + 'admin/posts/comments';\n  const token = localStorage.getItem('token');\n  const options = {\n    method: 'POST',\n    mode: 'cors',\n    body: JSON.stringify({slug, index}),\n    headers: {\n      'Content-Type': 'application/json',\n      'Authorization': `Bearer ${token}`\n    }\n  };\n\n  const response = await fetch(URL, options);\n  return response.ok;\n};\n  \nexport default deleteComment;\n","import React, { useContext } from 'react';\nimport { useNavigate, useLocation } from 'react-router-dom';\nimport Card from 'react-bootstrap/Card';\nimport Button from 'react-bootstrap/Button';\n\nimport { Context } from '../context/Context';\nimport deleteComment from '../modules/deleteComment';\n\nconst ManageComments = () => {\n\n  const { currentUser } = useContext(Context);\n    \n  const navigate = useNavigate();\n  const location = useLocation();\n  const comments = location.state.comments;\n  const slug = location.state.slug;\n    \n  const delComment = async (index) => {\n    const deleted = await deleteComment(slug, index);\n    if (deleted) navigate('/');\n  };\n\n  return (\n    <>\n      {currentUser &&\n        <div className=\"mx-auto mt-3 d-flex flex-column align-items-center\">\n          <h1 className=\"text-center text-muted\">Comments</h1>\n          <div className=\"w-50\">\n            {comments.map((comment, index) => {\n              return (\n                <Card \n                  key={index}\n                  className=\"mx-auto my-3 w-75\">\n                  <Card.Header className=\"d-flex justify-content-between\" as=\"h5\">\n                    Comment {index + 1}\n                  </Card.Header>\n                  <Card.Body>\n                    <Card.Title>User: {comment.user}</Card.Title>\n                    <Card.Text>Message: {comment.message}</Card.Text>\n                    <Button \n                      onClick={() => delComment(index)} \n                      variant=\"outline-danger\">Delete Comment</Button>\n                  </Card.Body>\n                </Card>\n                )\n            })}\n          </div>\n        </div>\n      }\n    </>\n  )\n};\n\nexport default ManageComments\n","import React from 'react';\nimport { Routes, Route } from 'react-router-dom';\n\nimport ContextProvider from './context/Context';\nimport Topbar from './components/Topbar';\nimport FormModal from './components/FormModal';\nimport PostList from './components/PostList';\nimport DraftList from './components/DraftList';\nimport CreateDraft from './components/CreateDraft';\nimport ManageComments from './components/ManageComments';\n\nconst App = () => {\n  return (\n    <div className=\"pb-5 bg-secondary bg-opacity-25\">\n      <ContextProvider>\n        <Topbar />\n        <Routes>\n          <Route path=\"/\" element={<PostList />} />\n          <Route path=\"/drafts\" element={<DraftList />} />\n          <Route path=\"/drafts/create\" element={<CreateDraft />} />\n          <Route path=\"/drafts/update\" element={<CreateDraft />} />\n          <Route path=\"/post/comments\" element={<ManageComments />} />\n        </Routes>\n        <FormModal />\n      </ContextProvider>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { HashRouter } from 'react-router-dom';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './index.css';\n\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <HashRouter>\n      <App /> \n    </HashRouter>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}